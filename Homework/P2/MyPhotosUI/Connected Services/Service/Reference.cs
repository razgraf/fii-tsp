//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyPhotosUI.Service {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.InterfaceWCF")]
    public interface InterfaceWCF {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/UpdateFileDataByFileIdAndLabel", ReplyAction="http://tempuri.org/InterfaceWCF/UpdateFileDataByFileIdAndLabelResponse")]
        void UpdateFileDataByFileIdAndLabel(System.Guid fileId, string label, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/UpdateFileDataByFileIdAndLabel", ReplyAction="http://tempuri.org/InterfaceWCF/UpdateFileDataByFileIdAndLabelResponse")]
        System.Threading.Tasks.Task UpdateFileDataByFileIdAndLabelAsync(System.Guid fileId, string label, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/CreateFile", ReplyAction="http://tempuri.org/InterfaceWCF/CreateFileResponse")]
        MyPhotos.File CreateFile(string name, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/CreateFile", ReplyAction="http://tempuri.org/InterfaceWCF/CreateFileResponse")]
        System.Threading.Tasks.Task<MyPhotos.File> CreateFileAsync(string name, string path);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/CreateData", ReplyAction="http://tempuri.org/InterfaceWCF/CreateDataResponse")]
        MyPhotos.Data CreateData(string label, bool isSearchable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/CreateData", ReplyAction="http://tempuri.org/InterfaceWCF/CreateDataResponse")]
        System.Threading.Tasks.Task<MyPhotos.Data> CreateDataAsync(string label, bool isSearchable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/CreateFileData", ReplyAction="http://tempuri.org/InterfaceWCF/CreateFileDataResponse")]
        MyPhotos.FileData CreateFileData(MyPhotos.File file, MyPhotos.Data data, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/CreateFileData", ReplyAction="http://tempuri.org/InterfaceWCF/CreateFileDataResponse")]
        System.Threading.Tasks.Task<MyPhotos.FileData> CreateFileDataAsync(MyPhotos.File file, MyPhotos.Data data, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/RemoveFileById", ReplyAction="http://tempuri.org/InterfaceWCF/RemoveFileByIdResponse")]
        void RemoveFileById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/RemoveFileById", ReplyAction="http://tempuri.org/InterfaceWCF/RemoveFileByIdResponse")]
        System.Threading.Tasks.Task RemoveFileByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/RemoveDataById", ReplyAction="http://tempuri.org/InterfaceWCF/RemoveDataByIdResponse")]
        void RemoveDataById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/RemoveDataById", ReplyAction="http://tempuri.org/InterfaceWCF/RemoveDataByIdResponse")]
        System.Threading.Tasks.Task RemoveDataByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFileById", ReplyAction="http://tempuri.org/InterfaceWCF/GetFileByIdResponse")]
        MyPhotos.File GetFileById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFileById", ReplyAction="http://tempuri.org/InterfaceWCF/GetFileByIdResponse")]
        System.Threading.Tasks.Task<MyPhotos.File> GetFileByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetDataById", ReplyAction="http://tempuri.org/InterfaceWCF/GetDataByIdResponse")]
        MyPhotos.Data GetDataById(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetDataById", ReplyAction="http://tempuri.org/InterfaceWCF/GetDataByIdResponse")]
        System.Threading.Tasks.Task<MyPhotos.Data> GetDataByIdAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFiles", ReplyAction="http://tempuri.org/InterfaceWCF/GetFilesResponse")]
        MyPhotos.File[] GetFiles();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFiles", ReplyAction="http://tempuri.org/InterfaceWCF/GetFilesResponse")]
        System.Threading.Tasks.Task<MyPhotos.File[]> GetFilesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetDatas", ReplyAction="http://tempuri.org/InterfaceWCF/GetDatasResponse")]
        MyPhotos.Data[] GetDatas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetDatas", ReplyAction="http://tempuri.org/InterfaceWCF/GetDatasResponse")]
        System.Threading.Tasks.Task<MyPhotos.Data[]> GetDatasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFileDatas", ReplyAction="http://tempuri.org/InterfaceWCF/GetFileDatasResponse")]
        MyPhotos.FileData[] GetFileDatas();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFileDatas", ReplyAction="http://tempuri.org/InterfaceWCF/GetFileDatasResponse")]
        System.Threading.Tasks.Task<MyPhotos.FileData[]> GetFileDatasAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFileDatasByFileId", ReplyAction="http://tempuri.org/InterfaceWCF/GetFileDatasByFileIdResponse")]
        MyPhotos.FileData[] GetFileDatasByFileId(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFileDatasByFileId", ReplyAction="http://tempuri.org/InterfaceWCF/GetFileDatasByFileIdResponse")]
        System.Threading.Tasks.Task<MyPhotos.FileData[]> GetFileDatasByFileIdAsync(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFilteredFiles", ReplyAction="http://tempuri.org/InterfaceWCF/GetFilteredFilesResponse")]
        MyPhotos.File[] GetFilteredFiles(System.Func<MyPhotos.File, bool> filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFilteredFiles", ReplyAction="http://tempuri.org/InterfaceWCF/GetFilteredFilesResponse")]
        System.Threading.Tasks.Task<MyPhotos.File[]> GetFilteredFilesAsync(System.Func<MyPhotos.File, bool> filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFilteredDatas", ReplyAction="http://tempuri.org/InterfaceWCF/GetFilteredDatasResponse")]
        MyPhotos.Data[] GetFilteredDatas(System.Func<MyPhotos.Data, bool> filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFilteredDatas", ReplyAction="http://tempuri.org/InterfaceWCF/GetFilteredDatasResponse")]
        System.Threading.Tasks.Task<MyPhotos.Data[]> GetFilteredDatasAsync(System.Func<MyPhotos.Data, bool> filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFilteredFileDatas", ReplyAction="http://tempuri.org/InterfaceWCF/GetFilteredFileDatasResponse")]
        MyPhotos.FileData[] GetFilteredFileDatas(System.Func<MyPhotos.FileData, bool> filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceWCF/GetFilteredFileDatas", ReplyAction="http://tempuri.org/InterfaceWCF/GetFilteredFileDatasResponse")]
        System.Threading.Tasks.Task<MyPhotos.FileData[]> GetFilteredFileDatasAsync(System.Func<MyPhotos.FileData, bool> filter);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface InterfaceWCFChannel : MyPhotosUI.Service.InterfaceWCF, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InterfaceWCFClient : System.ServiceModel.ClientBase<MyPhotosUI.Service.InterfaceWCF>, MyPhotosUI.Service.InterfaceWCF {
        
        public InterfaceWCFClient() {
        }
        
        public InterfaceWCFClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InterfaceWCFClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InterfaceWCFClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InterfaceWCFClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UpdateFileDataByFileIdAndLabel(System.Guid fileId, string label, string value) {
            base.Channel.UpdateFileDataByFileIdAndLabel(fileId, label, value);
        }
        
        public System.Threading.Tasks.Task UpdateFileDataByFileIdAndLabelAsync(System.Guid fileId, string label, string value) {
            return base.Channel.UpdateFileDataByFileIdAndLabelAsync(fileId, label, value);
        }
        
        public MyPhotos.File CreateFile(string name, string path) {
            return base.Channel.CreateFile(name, path);
        }
        
        public System.Threading.Tasks.Task<MyPhotos.File> CreateFileAsync(string name, string path) {
            return base.Channel.CreateFileAsync(name, path);
        }
        
        public MyPhotos.Data CreateData(string label, bool isSearchable) {
            return base.Channel.CreateData(label, isSearchable);
        }
        
        public System.Threading.Tasks.Task<MyPhotos.Data> CreateDataAsync(string label, bool isSearchable) {
            return base.Channel.CreateDataAsync(label, isSearchable);
        }
        
        public MyPhotos.FileData CreateFileData(MyPhotos.File file, MyPhotos.Data data, string value) {
            return base.Channel.CreateFileData(file, data, value);
        }
        
        public System.Threading.Tasks.Task<MyPhotos.FileData> CreateFileDataAsync(MyPhotos.File file, MyPhotos.Data data, string value) {
            return base.Channel.CreateFileDataAsync(file, data, value);
        }
        
        public void RemoveFileById(System.Guid id) {
            base.Channel.RemoveFileById(id);
        }
        
        public System.Threading.Tasks.Task RemoveFileByIdAsync(System.Guid id) {
            return base.Channel.RemoveFileByIdAsync(id);
        }
        
        public void RemoveDataById(System.Guid id) {
            base.Channel.RemoveDataById(id);
        }
        
        public System.Threading.Tasks.Task RemoveDataByIdAsync(System.Guid id) {
            return base.Channel.RemoveDataByIdAsync(id);
        }
        
        public MyPhotos.File GetFileById(System.Guid id) {
            return base.Channel.GetFileById(id);
        }
        
        public System.Threading.Tasks.Task<MyPhotos.File> GetFileByIdAsync(System.Guid id) {
            return base.Channel.GetFileByIdAsync(id);
        }
        
        public MyPhotos.Data GetDataById(System.Guid id) {
            return base.Channel.GetDataById(id);
        }
        
        public System.Threading.Tasks.Task<MyPhotos.Data> GetDataByIdAsync(System.Guid id) {
            return base.Channel.GetDataByIdAsync(id);
        }
        
        public MyPhotos.File[] GetFiles() {
            return base.Channel.GetFiles();
        }
        
        public System.Threading.Tasks.Task<MyPhotos.File[]> GetFilesAsync() {
            return base.Channel.GetFilesAsync();
        }
        
        public MyPhotos.Data[] GetDatas() {
            return base.Channel.GetDatas();
        }
        
        public System.Threading.Tasks.Task<MyPhotos.Data[]> GetDatasAsync() {
            return base.Channel.GetDatasAsync();
        }
        
        public MyPhotos.FileData[] GetFileDatas() {
            return base.Channel.GetFileDatas();
        }
        
        public System.Threading.Tasks.Task<MyPhotos.FileData[]> GetFileDatasAsync() {
            return base.Channel.GetFileDatasAsync();
        }
        
        public MyPhotos.FileData[] GetFileDatasByFileId(System.Guid fileId) {
            return base.Channel.GetFileDatasByFileId(fileId);
        }
        
        public System.Threading.Tasks.Task<MyPhotos.FileData[]> GetFileDatasByFileIdAsync(System.Guid fileId) {
            return base.Channel.GetFileDatasByFileIdAsync(fileId);
        }
        
        public MyPhotos.File[] GetFilteredFiles(System.Func<MyPhotos.File, bool> filter) {
            return base.Channel.GetFilteredFiles(filter);
        }
        
        public System.Threading.Tasks.Task<MyPhotos.File[]> GetFilteredFilesAsync(System.Func<MyPhotos.File, bool> filter) {
            return base.Channel.GetFilteredFilesAsync(filter);
        }
        
        public MyPhotos.Data[] GetFilteredDatas(System.Func<MyPhotos.Data, bool> filter) {
            return base.Channel.GetFilteredDatas(filter);
        }
        
        public System.Threading.Tasks.Task<MyPhotos.Data[]> GetFilteredDatasAsync(System.Func<MyPhotos.Data, bool> filter) {
            return base.Channel.GetFilteredDatasAsync(filter);
        }
        
        public MyPhotos.FileData[] GetFilteredFileDatas(System.Func<MyPhotos.FileData, bool> filter) {
            return base.Channel.GetFilteredFileDatas(filter);
        }
        
        public System.Threading.Tasks.Task<MyPhotos.FileData[]> GetFilteredFileDatasAsync(System.Func<MyPhotos.FileData, bool> filter) {
            return base.Channel.GetFilteredFileDatasAsync(filter);
        }
    }
}
