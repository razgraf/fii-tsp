//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ServiceReferencePC {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Post", Namespace="http://schemas.datacontract.org/2004/07/WCFPostComment", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Post : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReferencePC.Comment[] CommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DomainField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReferencePC.Comment[] Comments {
            get {
                return this.CommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentsField, value) != true)) {
                    this.CommentsField = value;
                    this.RaisePropertyChanged("Comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Domain {
            get {
                return this.DomainField;
            }
            set {
                if ((object.ReferenceEquals(this.DomainField, value) != true)) {
                    this.DomainField = value;
                    this.RaisePropertyChanged("Domain");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostId {
            get {
                return this.PostIdField;
            }
            set {
                if ((this.PostIdField.Equals(value) != true)) {
                    this.PostIdField = value;
                    this.RaisePropertyChanged("PostId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Comment", Namespace="http://schemas.datacontract.org/2004/07/WCFPostComment", IsReference=true)]
    [System.SerializableAttribute()]
    public partial class Comment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CommentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Client.ServiceReferencePC.Post PostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PostPostIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CommentId {
            get {
                return this.CommentIdField;
            }
            set {
                if ((this.CommentIdField.Equals(value) != true)) {
                    this.CommentIdField = value;
                    this.RaisePropertyChanged("CommentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Client.ServiceReferencePC.Post Post {
            get {
                return this.PostField;
            }
            set {
                if ((object.ReferenceEquals(this.PostField, value) != true)) {
                    this.PostField = value;
                    this.RaisePropertyChanged("Post");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PostPostId {
            get {
                return this.PostPostIdField;
            }
            set {
                if ((this.PostPostIdField.Equals(value) != true)) {
                    this.PostPostIdField = value;
                    this.RaisePropertyChanged("PostPostId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReferencePC.IPostComment")]
    public interface IPostComment {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePost/AddPost", ReplyAction="http://tempuri.org/InterfacePost/AddPostResponse")]
        bool AddPost(Client.ServiceReferencePC.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePost/AddPost", ReplyAction="http://tempuri.org/InterfacePost/AddPostResponse")]
        System.Threading.Tasks.Task<bool> AddPostAsync(Client.ServiceReferencePC.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePost/UpdatePost", ReplyAction="http://tempuri.org/InterfacePost/UpdatePostResponse")]
        Client.ServiceReferencePC.Post UpdatePost(Client.ServiceReferencePC.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePost/UpdatePost", ReplyAction="http://tempuri.org/InterfacePost/UpdatePostResponse")]
        System.Threading.Tasks.Task<Client.ServiceReferencePC.Post> UpdatePostAsync(Client.ServiceReferencePC.Post post);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePost/DeletePost", ReplyAction="http://tempuri.org/InterfacePost/DeletePostResponse")]
        int DeletePost(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePost/DeletePost", ReplyAction="http://tempuri.org/InterfacePost/DeletePostResponse")]
        System.Threading.Tasks.Task<int> DeletePostAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePost/GetPostById", ReplyAction="http://tempuri.org/InterfacePost/GetPostByIdResponse")]
        Client.ServiceReferencePC.Post GetPostById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePost/GetPostById", ReplyAction="http://tempuri.org/InterfacePost/GetPostByIdResponse")]
        System.Threading.Tasks.Task<Client.ServiceReferencePC.Post> GetPostByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePost/GetPosts", ReplyAction="http://tempuri.org/InterfacePost/GetPostsResponse")]
        Client.ServiceReferencePC.Post[] GetPosts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfacePost/GetPosts", ReplyAction="http://tempuri.org/InterfacePost/GetPostsResponse")]
        System.Threading.Tasks.Task<Client.ServiceReferencePC.Post[]> GetPostsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceComment/AddComment", ReplyAction="http://tempuri.org/InterfaceComment/AddCommentResponse")]
        bool AddComment(Client.ServiceReferencePC.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceComment/AddComment", ReplyAction="http://tempuri.org/InterfaceComment/AddCommentResponse")]
        System.Threading.Tasks.Task<bool> AddCommentAsync(Client.ServiceReferencePC.Comment comment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceComment/UpdateComment", ReplyAction="http://tempuri.org/InterfaceComment/UpdateCommentResponse")]
        Client.ServiceReferencePC.Comment UpdateComment(Client.ServiceReferencePC.Comment newComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceComment/UpdateComment", ReplyAction="http://tempuri.org/InterfaceComment/UpdateCommentResponse")]
        System.Threading.Tasks.Task<Client.ServiceReferencePC.Comment> UpdateCommentAsync(Client.ServiceReferencePC.Comment newComment);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceComment/GetCommentById", ReplyAction="http://tempuri.org/InterfaceComment/GetCommentByIdResponse")]
        Client.ServiceReferencePC.Comment GetCommentById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InterfaceComment/GetCommentById", ReplyAction="http://tempuri.org/InterfaceComment/GetCommentByIdResponse")]
        System.Threading.Tasks.Task<Client.ServiceReferencePC.Comment> GetCommentByIdAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPostCommentChannel : Client.ServiceReferencePC.IPostComment, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PostCommentClient : System.ServiceModel.ClientBase<Client.ServiceReferencePC.IPostComment>, Client.ServiceReferencePC.IPostComment {
        
        public PostCommentClient() {
        }
        
        public PostCommentClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PostCommentClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostCommentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PostCommentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddPost(Client.ServiceReferencePC.Post post) {
            return base.Channel.AddPost(post);
        }
        
        public System.Threading.Tasks.Task<bool> AddPostAsync(Client.ServiceReferencePC.Post post) {
            return base.Channel.AddPostAsync(post);
        }
        
        public Client.ServiceReferencePC.Post UpdatePost(Client.ServiceReferencePC.Post post) {
            return base.Channel.UpdatePost(post);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReferencePC.Post> UpdatePostAsync(Client.ServiceReferencePC.Post post) {
            return base.Channel.UpdatePostAsync(post);
        }
        
        public int DeletePost(int id) {
            return base.Channel.DeletePost(id);
        }
        
        public System.Threading.Tasks.Task<int> DeletePostAsync(int id) {
            return base.Channel.DeletePostAsync(id);
        }
        
        public Client.ServiceReferencePC.Post GetPostById(int id) {
            return base.Channel.GetPostById(id);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReferencePC.Post> GetPostByIdAsync(int id) {
            return base.Channel.GetPostByIdAsync(id);
        }
        
        public Client.ServiceReferencePC.Post[] GetPosts() {
            return base.Channel.GetPosts();
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReferencePC.Post[]> GetPostsAsync() {
            return base.Channel.GetPostsAsync();
        }
        
        public bool AddComment(Client.ServiceReferencePC.Comment comment) {
            return base.Channel.AddComment(comment);
        }
        
        public System.Threading.Tasks.Task<bool> AddCommentAsync(Client.ServiceReferencePC.Comment comment) {
            return base.Channel.AddCommentAsync(comment);
        }
        
        public Client.ServiceReferencePC.Comment UpdateComment(Client.ServiceReferencePC.Comment newComment) {
            return base.Channel.UpdateComment(newComment);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReferencePC.Comment> UpdateCommentAsync(Client.ServiceReferencePC.Comment newComment) {
            return base.Channel.UpdateCommentAsync(newComment);
        }
        
        public Client.ServiceReferencePC.Comment GetCommentById(int id) {
            return base.Channel.GetCommentById(id);
        }
        
        public System.Threading.Tasks.Task<Client.ServiceReferencePC.Comment> GetCommentByIdAsync(int id) {
            return base.Channel.GetCommentByIdAsync(id);
        }
    }
}
